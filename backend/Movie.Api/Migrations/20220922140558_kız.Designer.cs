// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movie.Api;

#nullable disable

namespace Movie.Api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220922140558_kız")]
    partial class kız
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Movie.Api.Models.Entities.Anasayfa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Creators")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imdb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Minute")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Starring")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextMovieSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Anasayfas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("90572339-f3cc-443a-97b6-f386892745fe"),
                            Age = 7,
                            Category = "Dram",
                            Country = "ABD",
                            Creators = "Steven Spielberg",
                            Explane = "Universal Pictures, Steven Spielberg'ün yarı-otobiyografik yeni filmi The Fabelmans'ın ilk fragmanını yayınladı. Pulitzer ödüllü oyun yazarı Tony Kushner (Lincoln, Münih) tarafından kaleme alınan film, Arizona'da büyüyen ve film yapma tutkusu kazanan bir genci konu alıyor.İkinci Dünya Savaşı sonrası Arizona'da büyüyen Sammy Fabelman adında genç bir adam, ailesini sarsan bir sırrı keşfeder ve filmlerin gücünün gerçeği görmesine nasıl yardımcı olabileceğini araştırır. Sammy karakterine Gabriel LeBelle hayat verirken; Sammy'nin sanatla ilgilenen annesini Michelle Williams,bir bilim insanı olan babasını ise Paul Dano canlandırıyor.Oyuncu kadrosunda ayrıca,Sammy'nin hayatında önemli bir yeri olan Bennie amca rolüyle Seth Rogen de var. Filmdeki tüm karakterler Spielberg'ün gerçek aile üyelerinden izler taşıyor.Hafta sonunda,47.Toronto Uluslararası Film Festivali'nde ilk kez görücüye çıkan film eleştirmenler tarafından övgüyle karşılandı. Filmin şimdiden En İyi Film Oscar'ı için güçlü bir aday olduğu konuşuluyor.Spielberg son olarak geçtğimiz Oscar töreninde,senaryosu yine Tony Kushner'in imzasını taşıyan 'West Side Story' filmiyle En İyi Film dahil olmak üzere 6 dalda Oscar adaylığı elde etmişti.",
                            Imdb = "9.2",
                            Minute = 151,
                            Name = "The Fabelmas",
                            PictureSource = "amblin.com",
                            Starring = "Gabriel LaBelle, Michelle Williams,Paul DanoSeth Rogen,Judd Hirsch",
                            TextMovieSource = "www.beyazperde.com",
                            Trailer = "https://www.youtube.com/watch?v=D1G2iLSzOe8&t=1s",
                            Url = "https://amblin.com/wp-content/uploads/2019/06/westsidestory_2020_photo_hero-827x465.jpg",
                            Year = 2022
                        });
                });

            modelBuilder.Entity("Movie.Api.Models.Entities.Anasayfa1", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Creators")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imdb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Minute")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Starring")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextMovieSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Anasayfas1");
                });

            modelBuilder.Entity("Movie.Api.Models.Entities.Animasyon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Creators")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imdb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Minute")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Starring")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextMovieSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Animasyons");
                });

            modelBuilder.Entity("Movie.Api.Models.Entities.Animasyon1", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Creators")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imdb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Minute")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Starring")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextMovieSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Animasyons1");
                });

            modelBuilder.Entity("Movie.Api.Models.Entities.Avrupa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Creators")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imdb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Minute")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Starring")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextMovieSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Avrupas");
                });

            modelBuilder.Entity("Movie.Api.Models.Entities.Avrupa1", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Creators")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imdb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Minute")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Starring")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextMovieSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Avrupas1");
                });

            modelBuilder.Entity("Movie.Api.Models.Entities.Dizi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Creators")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imdb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Minute")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Starring")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextMovieSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dizis");
                });

            modelBuilder.Entity("Movie.Api.Models.Entities.Dizi1", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Creators")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imdb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Minute")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Starring")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextMovieSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dizis1");
                });

            modelBuilder.Entity("Movie.Api.Models.Entities.Hollywood", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Creators")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imdb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Minute")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Starring")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextMovieSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Hollywoods");
                });

            modelBuilder.Entity("Movie.Api.Models.Entities.Hollywood1", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Creators")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imdb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Minute")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Starring")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextMovieSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Hollywoods1");
                });

            modelBuilder.Entity("Movie.Api.Models.Entities.Olmeden", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Creators")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imdb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Minute")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Starring")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextMovieSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Olmedens");
                });

            modelBuilder.Entity("Movie.Api.Models.Entities.Olmeden1", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Creators")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imdb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Minute")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Starring")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextMovieSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Olmedens1");
                });

            modelBuilder.Entity("Movie.Api.Models.Entities.Oscar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Creators")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imdb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Minute")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Starring")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextMovieSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Oscars");
                });

            modelBuilder.Entity("Movie.Api.Models.Entities.Oscar1", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Creators")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imdb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Minute")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Starring")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextMovieSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Oscars1");
                });

            modelBuilder.Entity("Movie.Api.Models.Entities.Seri", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Creators")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imdb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Minute")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Starring")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextMovieSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Seris");
                });

            modelBuilder.Entity("Movie.Api.Models.Entities.Seri1", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Creators")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imdb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Minute")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Starring")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextMovieSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Seris1");
                });
#pragma warning restore 612, 618
        }
    }
}
